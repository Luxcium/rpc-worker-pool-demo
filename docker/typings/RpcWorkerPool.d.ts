import { Worker } from 'worker_threads';
export declare class RpcWorkerPool {
    private size;
    private strategy;
    private versosity;
    private rr_index;
    private next_job_id;
    private workers;
    constructor(path: string, size?: number, strategy?: string, versosity?: boolean);
    onMessageHandler(msg: any, worker_id: number): void;
    exec(command_name: string, message_id: number, ...args: string[]): Promise<unknown>;
    getWorker(message_id?: number): {
        worker: Worker;
        in_flight_commands: Map<number, any>;
    };
}
export default RpcWorkerPool;
/**
 * The size of the worker pool
 * @member @type {number}
 */
/**
 * The strategie to determine the worker to be to execude the next
 * command.
 * @member @type {Strategies}
 */
/**
 * Determines the verbosity of certain informations to log.
 * @member @type {boolean}
 */
/**
 * @param {string} method_name - The name of the method listed in
 * the available commands.
 * @param {number} message_id - The sequential number generated by
 * the server, identifies which message will be linked with the
 * curent job being executed. (For feedback purpose only).
 */
